#BlueJ class context
comment0.target=Maestro
comment0.text=\n\ This\ class\ Maestro\ represents\ the\ maestro\ of\ the\ orchestra.\ With\ this\ class\n\ we\ can\ create\ a\ maestro,\ add\ a\ music\ type,\ show\ the\ description\ of\ the\n\ maestro,\ show\ the\ description\ of\ the\ music\ types.\n\n\ @author\:\ Tiago\ Ramada(202200354)\ &\ Bernardo\ Vaz(202200278)\n\ @email\:\ Tiago(202200354@estudantes.ips.pt)\n\ \ \ \ \ \ \ \ \ Bernardo(202200278@estudantes.ips.pt)\n\ @version\ 1\n
comment1.params=name\ ranking
comment1.target=Maestro(java.lang.String,\ int)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Maestro\n\ \n\ @param\ name\ \ \ \ the\ name\ of\ the\ maestro\n\ @param\ ranking\ the\ ranking\ of\ the\ maestro,\ between\ 1\ and\ 5,\ with\ 5\ being\ the\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ highest\n
comment2.params=type
comment2.target=void\ addMusicType(MusicType)
comment2.text=\n\ Adds\ a\ music\ type\ to\ the\ maestro's\ repertoire.\n\ \n\ @param\ type\ the\ music\ type\ to\ be\ added\n
comment3.params=
comment3.target=void\ showDescription()
comment3.text=\n\ Shows\ a\ description\ of\ the\ maestro,\ including\ the\ name,\ performance\ ranking,\n\ and\ music\ types\ they\ are\ capable\ of\ conducting.\n
comment4.params=
comment4.target=void\ getMusicTypes()
comment4.text=\n\ Prints\ the\ names\ of\ all\ music\ types\ in\ the\ maestro's\ repertoire.\n
numComments=5
